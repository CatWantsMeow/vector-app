AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  StackName:
    Type: String
    Default: vector-app

Resources:
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'VPCId']]
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'
      Subnets:
        - Fn::ImportValue:
            !Join [':', [!Ref 'StackName', 'SubnetA']]
        - Fn::ImportValue:
            !Join [':', [!Ref 'StackName', 'SubnetB']]
      SecurityGroups: [!Ref 'LoadBalancerSecurityGroup']

  DummyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ['-', [!Ref 'StackName', 'dummy']]
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'VPCId']]

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - LoadBalancer
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref 'DummyTargetGroup'
          Type: 'forward'
      LoadBalancerArn: !Ref 'LoadBalancer'
      Port: 80
      Protocol: HTTP

Outputs:
  ExternalUrl:
    Value: !Join ['', ['http://', !GetAtt 'LoadBalancer.DNSName']]
    Export:
      Name: !Join [ ':', [ !Ref 'StackName', 'ExternalUrl' ] ]

  LoadBalancerListener:
    Value: !Ref LoadBalancerListener
    Export:
      Name: !Join [ ':', [ !Ref 'StackName', 'LoadBalancerListener' ] ]

  LoadBalancerSecurityGroup:
    Value: !Ref LoadBalancerSecurityGroup
    Export:
      Name: !Join [ ':', [ !Ref 'StackName', 'LoadBalancerSecurityGroup' ] ]
